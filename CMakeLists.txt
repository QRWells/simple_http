# this is the build file for project SimpleHttp
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(SimpleHttp VERSION 0.1.0 LANGUAGES CXX C)

# target
set(CMAKE_C_COMPILER "/usr/bin/gcc")
set(CMAKE_CXX_COMPILER "/usr/bin/g++")
add_executable(example_http_server "")
set_target_properties(example_http_server PROPERTIES OUTPUT_NAME "example_http_server")
set_target_properties(example_http_server PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/release")
add_dependencies(example_http_server static_lib)
target_include_directories(example_http_server PRIVATE
    include
    src
)
target_compile_options(example_http_server PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
set_target_properties(example_http_server PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(example_http_server PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(example_http_server PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(example_http_server PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(example_http_server PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET example_http_server PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(example_http_server PRIVATE
    static_lib
    pthread
)
target_link_directories(example_http_server PRIVATE
    build/linux/x86_64/release
)
target_link_options(example_http_server PRIVATE
    -m64
)
target_sources(example_http_server PRIVATE
    example/http_server.cpp
)

# target
set(CMAKE_C_COMPILER "/usr/bin/gcc")
set(CMAKE_CXX_COMPILER "/usr/bin/g++")
add_executable(example_tcp_server "")
set_target_properties(example_tcp_server PROPERTIES OUTPUT_NAME "example_tcp_server")
set_target_properties(example_tcp_server PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/release")
add_dependencies(example_tcp_server static_lib)
target_include_directories(example_tcp_server PRIVATE
    include
    src
)
target_compile_options(example_tcp_server PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
set_target_properties(example_tcp_server PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(example_tcp_server PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(example_tcp_server PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(example_tcp_server PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(example_tcp_server PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET example_tcp_server PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(example_tcp_server PRIVATE
    static_lib
    pthread
)
target_link_directories(example_tcp_server PRIVATE
    build/linux/x86_64/release
)
target_link_options(example_tcp_server PRIVATE
    -m64
)
target_sources(example_tcp_server PRIVATE
    example/tcp_server.cpp
)

# target
set(CMAKE_C_COMPILER "/usr/bin/gcc")
set(CMAKE_CXX_COMPILER "/usr/bin/g++")
add_executable(msg_buffer_test "")
set_target_properties(msg_buffer_test PROPERTIES OUTPUT_NAME "msg_buffer_test")
set_target_properties(msg_buffer_test PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/release")
add_dependencies(msg_buffer_test static_lib)
target_include_directories(msg_buffer_test PRIVATE
    include
    src
)
target_compile_options(msg_buffer_test PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
set_target_properties(msg_buffer_test PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(msg_buffer_test PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(msg_buffer_test PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(msg_buffer_test PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(msg_buffer_test PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET msg_buffer_test PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(msg_buffer_test PRIVATE
    static_lib
)
target_link_directories(msg_buffer_test PRIVATE
    build/linux/x86_64/release
)
target_link_options(msg_buffer_test PRIVATE
    -m64
)
target_sources(msg_buffer_test PRIVATE
    test/msg_buffer_test.cpp
)

# target
set(CMAKE_C_COMPILER "/usr/bin/gcc")
set(CMAKE_CXX_COMPILER "/usr/bin/g++")
add_library(shared_lib SHARED "")
set_target_properties(shared_lib PROPERTIES OUTPUT_NAME "shared_lib")
set_target_properties(shared_lib PROPERTIES LIBRARY_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/release")
target_include_directories(shared_lib PRIVATE
    include
    src
)
target_compile_options(shared_lib PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
set_target_properties(shared_lib PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(shared_lib PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(shared_lib PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(shared_lib PRIVATE -O3)
endif()
if(MSVC)
    set_property(TARGET shared_lib PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_options(shared_lib PRIVATE
    -m64
)
target_sources(shared_lib PRIVATE
    src/net/channel.cpp
    src/net/tcp_connection.cpp
    src/net/tcp_server.cpp
    src/net/event_loop_thread.cpp
    src/net/socket.cpp
    src/net/epoll.cpp
    src/net/event_loop.cpp
    src/net/http/http_context.cpp
    src/net/http/http_server.cpp
    src/net/acceptor.cpp
    src/utils/msg_buffer.cpp
)

# target
set(CMAKE_C_COMPILER "/usr/bin/gcc")
set(CMAKE_CXX_COMPILER "/usr/bin/g++")
add_library(static_lib STATIC "")
set_target_properties(static_lib PROPERTIES OUTPUT_NAME "static_lib")
set_target_properties(static_lib PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/release")
target_include_directories(static_lib PRIVATE
    include
    src
)
target_compile_options(static_lib PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
set_target_properties(static_lib PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(static_lib PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(static_lib PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(static_lib PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(static_lib PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET static_lib PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(static_lib PRIVATE
    src/net/channel.cpp
    src/net/tcp_connection.cpp
    src/net/tcp_server.cpp
    src/net/event_loop_thread.cpp
    src/net/socket.cpp
    src/net/epoll.cpp
    src/net/event_loop.cpp
    src/net/http/http_context.cpp
    src/net/http/http_server.cpp
    src/net/acceptor.cpp
    src/utils/msg_buffer.cpp
)

